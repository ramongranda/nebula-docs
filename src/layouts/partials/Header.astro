---
import Logo from "@/components/Logo.astro";
import ThemeSwitcher from "@/components/ThemeSwitcher.astro";
import SearchModal from "@/layouts/helpers/SearchModal.svelte";
import config from "@/config/config.json";
import menu from "@/config/menu.json";

const { main } = menu;
const { navigation_button, settings } = config;
const { pathname } = Astro.url;

const headerClasses = `header z-30 ${settings.sticky_header ? "sticky top-0" : ""}`;
let showSearch = false;
---

<header class={headerClasses}>
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0">
      <Logo />
    </div>

    <!-- navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      for="nav-toggle"
      class="order-3 cursor-pointer flex items-center lg:hidden text-text-dark dark:text-white lg:order-1"
    >
      <!-- Menu open (hamburger) -->
      <svg id="show-button" class="h-6 fill-current block" viewBox="0 0 20 20" aria-hidden="true">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
      <!-- Menu close (X) -->
      <svg id="hide-button" class="h-6 fill-current hidden" viewBox="0 0 20 20" aria-hidden="true">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->

    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden w-full pb-6 lg:order-1 lg:flex lg:w-auto lg:space-x-2 lg:pb-0 xl:space-x-8"
    >
      {main.map((item) => {
        const isActive = (p) => pathname === p || pathname === `${p}/`;

        if (item.hasChildren && item.children?.length) {
          const activeChild = item.children.map(({ url }) => url).some(isActive);
          return (
            <li class="nav-item nav-dropdown group relative">
              <input
                type="checkbox"
                id={`submenu-${item.name}`}
                class="peer hidden lg:hidden"
              />
              <label
                for={`submenu-${item.name}`}
                class={`nav-link inline-flex items-center ${activeChild ? "active" : ""}`}
              >
                {item.name}
                <svg class="h-4 w-4 fill-current ml-1" viewBox="0 0 20 20" aria-hidden="true">
                  <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                </svg>
              </label>
              <ul class="nav-dropdown-list hidden peer-checked:block lg:invisible lg:absolute lg:block lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100">
                {item.children.map((child) => (
                  <li class="nav-dropdown-item">
                    <a
                      href={child.url}
                      aria-label={child.name}
                      class={`nav-dropdown-link block ${isActive(child.url) ? "active" : ""}`}
                    >
                      {child.name}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          );
        }

        return (
          <li class="nav-item">
            <a
              href={item.url}
              class={`nav-link block ${isActive(item.url) ? "active" : ""}`}
            >
              {item.name}
            </a>
          </li>
        );
      })}
      {navigation_button.enable && (
        <li class="mt-4 inline-block lg:hidden">
          <a
            class="btn btn-outline-primary btn-sm"
            href={navigation_button.link}
          >
            {navigation_button.label}
          </a>
        </li>
      )}
    </ul>

    <div class="order-1 ml-auto flex items-center md:order-2 lg:ml-0">
      <div class="mr-5">
        <SearchModal isOpen={showSearch} onClose={() => (showSearch = false)} client:load />
      </div>
      <!-- Theme switcher with spacing wrapper -->
      <div class="mr-5">
        <ThemeSwitcher />
      </div>

    </div>
  </nav>

  
</header>
